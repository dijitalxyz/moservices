<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<bookmark>DynamicPopup</bookmark>

<onEnter>
	print("page title is ", popupHeader);

	if (popupOptionSize &gt; 0) {
		found = "false";
		checkIndex = 0;
		while(1){
			checkTitle = getStringArrayAt(popupOptions, checkIndex);

			if (checkTitle == popupOptionFocus) {
				focusIndex = getFocusItemIndex();
				redrawDisplay("item", focusIndex);

				setFocusItemIndex(checkIndex);
				setItemFocus(checkIndex);
				redrawDisplay("item", checkIndex);
			}

			isInactive = isSettingInactive(popupHeader, checkTitle);
			if (isInactive == "true") {
				popupOptions = deleteStringArrayAt(popupOptions, checkIndex);
				popupOptionSize = popupOptionSize - 1;
				found = "true";
			}
			else {
				checkIndex += 1;
			}

	  		if (checkIndex == popupOptionSize){
				break;
	  		}
		}
		if (found == "false") {
			if (popupOptionFocusIndex &lt; popupOptionSize) {
				setFocusItemIndex(popupOptionFocusIndex);
				setItemFocus(popupOptionFocusIndex);
				redrawDisplay("item", popupOptionFocusIndex);
			}
		}
	}

	if (popupTimeout &gt; 0) {
		setRefreshTime(popupTimeout * 1000);
	}
</onEnter>

<onRefresh>
	if (popupTimeout &gt; 0) {
	    setRefreshTime(-1);

		focusIndex = getFocusItemIndex();
		data = getStringArrayAt(popupOptions, focusIndex);
		if (data != NULL) {
			setReturnString(data);
		}
		postMessage("return");
	}
</onRefresh>

<onExit>
	setRefreshTime(-1);
</onExit>

<!-- mediaDisplay of parent will be merged into the mediaDisplay here, include all child elements, ex: onEnter, text, image, etc. -->
<mediaDisplay
	name=onePartView

	sideColorRight=-1:-1:-1
	sideColorLeft=-1:-1:-1
	sideColorTop=-1:-1:-1
	sideColorBottom=-1:-1:-1
	backgroundColor=-1:-1:-1
	focusBorderColor=-1:-1:-1
	unFocusBorderColor=-1:-1:-1
	itemBackgroundColor=0:0:0

	showHeader="no"
	showDefaultInfo="no"

	rollItems="no"
	forceRedrawItems="yes"
>
<itemPerPage>
	<script>
		itemPerPage;
	</script>
</itemPerPage>
<viewAreaXPC>
	<script>
		viewAreaXPC;
	</script>
</viewAreaXPC>
<viewAreaYPC>
	<script>
		viewAreaYPC;
	</script>
</viewAreaYPC>
<viewAreaWidthPC>
	<script>
		viewAreaWidthPC;
	</script>
</viewAreaWidthPC>
<viewAreaHeightPC>
	<script>
		viewAreaHeightPC;
	</script>
</viewAreaHeightPC>

<itemWidthPC>
	<script>
		itemWidthPC;
	</script>
</itemWidthPC>
<itemHeightPC>
	<script>
		itemHeightPC;
	</script>
</itemHeightPC>
<itemImageWidthPC>
	<script>
		itemWidthPC;
	</script>
</itemImageWidthPC>
<itemImageHeightPC>
	<script>
		itemHeightPC;
	</script>
</itemImageHeightPC>
<itemXPC>
	<script>
		itemXPC;
	</script>
</itemXPC>
<itemYPC>
	<script>
		itemYPC;
	</script>
</itemYPC>
<itemImageXPC>
	<script>
		itemXPC;
	</script>
</itemImageXPC>
<itemImageYPC>
	<script>
		itemYPC;
	</script>
</itemImageYPC>
<imageFocus>
	<script>
		imageFocus;
	</script>
</imageFocus>

<backgroundDisplay>
	<image offsetXPC=0 widthPC=100>
		<offsetYPC>
			<script>
				(0+upPC+topPC)+offset1;
			</script>
		</offsetYPC>
		<heightPC>
			<script>
				100-(upPC+topPC)-(bottomPC+downPC)+offset2;
			</script>
		</heightPC>
		<script>
			image = "/tmp/app/ims/mc-image/setup_popup_bg_simple_middle.png";
			if (widthTargetIndex == 1) {
				image = "/tmp/app/ims/mc-image/setup_popup_bg_normal_middle.png";
			}
			else if (widthTargetIndex == 2 || widthTargetIndex == 3) {
				image = "/tmp/app/ims/mc-image/setup_popup_bg_wide_middle.png";
			}
			image;
		</script>
	</image>
	<image offsetXPC=0 widthPC=100>
		<offsetYPC>
			<script>
				0;
			</script>
		</offsetYPC>
		<heightPC>
			<script>
				0+upPC+topPC;
			</script>
		</heightPC>
		<script>
			image = "/tmp/app/ims/mc-image/setup_popup_bg_simple_top.png";
			if (widthTargetIndex == 1) {
				image = "/tmp/app/ims/mc-image/setup_popup_bg_normal_top.png";
			}
			else if (widthTargetIndex == 2 || widthTargetIndex == 3) {
				image = "/tmp/app/ims/mc-image/setup_popup_bg_wide_top.png";
			}
			image;
		</script>
	</image>
	<image offsetXPC=0 widthPC=100>
		<offsetYPC>
			<script>
				100-(bottomPC+downPC);
			</script>
		</offsetYPC>
		<heightPC>
			<script>
				0+bottomPC+downPC;
			</script>
		</heightPC>
		<script>
			image = "/tmp/app/ims/mc-image/setup_popup_bg_simple_bottom.png";
			if (widthTargetIndex == 1) {
				image = "/tmp/app/ims/mc-image/setup_popup_bg_normal_bottom.png";
			}
			else if (widthTargetIndex == 2 || widthTargetIndex == 3) {
				image = "/tmp/app/ims/mc-image/setup_popup_bg_wide_bottom.png";
			}
			image;
		</script>
	</image>
</backgroundDisplay>

<text offsetXPC=15 align=center fontSize=18 backgroundColor=-1:-1:-1 foregroundColor=255:255:255 >
	<offsetXPC>
		<script>
			(100-textPC)/2;
		</script>
	</offsetXPC>
	<offsetYPC>
		<script>
			upPC;
		</script>
	</offsetYPC>
	<widthPC>
		<script>
			textPC;
		</script>
	</widthPC>
	<heightPC>
		<script>
			topPC;
		</script>
	</heightPC>
	<script>
		popupHeader;
	</script>
</text>

<text align=left fontSize=14 backgroundColor=0:0:0 foregroundColor=255:255:255 multiPage=yes redraw=yes>
	<offsetXPC>
		<script>
			(100-textPC)/2;
		</script>
	</offsetXPC>
	<offsetYPC>
		<script>
			0+upPC+topPC+gapPC;
		</script>
	</offsetYPC>
	<widthPC>
		<script>
			textPC;
		</script>
	</widthPC>
	<heightPC>
		<script>
			messagePC;
		</script>
	</heightPC>
	<lines>
		<script>
			message_line_displayed;
		</script>
	</lines>
	<script>
		popupMessages;
	</script>
</text>

<scrollbar widthPC=1.1 backgroundImage="/tmp/app/ims/mc-image/scroll_bar_01.png" foregroundImage="/tmp/app/ims/mc-image/scroll_bar_02.png" border=0 offset=0 direction="vertical" redraw="yes">
	<offsetXPC>
		<script>
			(100-textPC)/2 + textPC + 0.5;
		</script>
	</offsetXPC>

	<offsetYPC>
		<script>
			0+upPC+topPC+gapPC;
		</script>
	</offsetYPC>

	<heightPC>
		<script>
			if (hintHeightPC &gt; 0) {
				heightPC = messagePC;
			} else {
				heightPC = 0;
			}
			heightPC;
		</script>
	</heightPC>

	<totalSize>
		<script>
			getTotalPages();
		</script>
	</totalSize>

	<startIndex>
		<script>
			getPageNumber();
		</script>
	</startIndex>
</scrollbar>

<image>
	<widthPC>
		<script>
			hintIconWidthPC;
		</script>
	</widthPC>

	<heightPC>
		<script>
			if (hintHeightPC == 0) {
				hintIconHeightPC = 0;
			}
			hintIconHeightPC;
		</script>
	</heightPC>

	<offsetXPC>
		<script>
			(100-textPC)/2;
		</script>
	</offsetXPC>
	<offsetYPC>
		<script>
			0+upPC+topPC+gapPC+messagePC+(hintHeightPC-hintIconHeightPC)/2;
		</script>
	</offsetYPC>
	<script>
		"/tmp/app/ims/mc-image/hint_left.png";
	</script>
</image>

<image>
	<widthPC>
		<script>
			hintIconWidthPC;
		</script>
	</widthPC>

	<heightPC>
		<script>
			if (hintHeightPC == 0) {
				hintIconHeightPC = 0;
			}
			hintIconHeightPC;
		</script>
	</heightPC>

	<offsetXPC>
		<script>
			(100-textPC)/2 + hintIconWidthPC + hintGapPC;
		</script>
	</offsetXPC>
	<offsetYPC>
		<script>
			0+upPC+topPC+gapPC+messagePC+(hintHeightPC-hintIconHeightPC)/2;
		</script>
	</offsetYPC>
	<script>
		"/tmp/app/ims/mc-image/hint_right.png";
	</script>
</image>

<text widthPC=10.0 fontSize=12 align=left lines=1 backgroundColor=-1:-1:-1 redraw="no">
	<heightPC>
		<script>
			hintHeightPC;
		</script>
	</heightPC>

	<offsetXPC>
		<script>
			(100-textPC)/2 + hintIconWidthPC + hintGapPC + hintIconWidthPC + hintGapPC;
		</script>
	</offsetXPC>
	<offsetYPC>
		<script>
			0+upPC+topPC+gapPC+messagePC;
		</script>
	</offsetYPC>
	<script>
		"More";
	</script>
</text>

<image offsetXPC=48.6 widthPC=2.7 heightPC=2.9 redraw="yes">
	<offsetYPC>
		<script>
			upPC-2.9*2;
		</script>
	</offsetYPC>
	<script>
		icon = "";
		focusIndex = getFocusItemIndex();
		if (popupOptionSize &gt; itemPerPage) {
			if (focusIndex == 0) {
				icon = "/tmp/app/ims/mc-image/setup_popup_up_unfocus.png";
			}
			else {
				icon = "/tmp/app/ims/mc-image/setup_popup_up_focus.png";
			}
		}
		icon;
	</script>
</image>

<image offsetXPC=48.6 widthPC=2.7 heightPC=2.9 redraw="yes">
	<offsetYPC>
		<script>
			100-downPC+2.9;
		</script>
	</offsetYPC>
	<script>
		icon = "";
		focusIndex = getFocusItemIndex();
		if (popupOptionSize &gt; itemPerPage) {
			boundary = popupOptionSize - 1;
			if (focusIndex == boundary) {
				icon = "/tmp/app/ims/mc-image/setup_popup_down_unfocus.png";
			}
			else {
				icon = "/tmp/app/ims/mc-image/setup_popup_down_focus.png";
			}
		}
		icon;
	</script>
</image>

<!-- itemDisplay will draw widget inside the item area, item area is decided by mediaDisplay attributes -->
<itemDisplay>
	<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
		<script>
			image = "";
			queryIndex = getQueryItemIndex();
			focusIndex = getFocusItemIndex();
			if (queryIndex == focusIndex) {
				image = "/tmp/app/ims/mc-image/398_focus.png";
				if (widthTargetIndex == 1) {
					image = "/tmp/app/ims/mc-image/398_focus.png";
				}
				else if(widthTargetIndex == 2) {
					image = "/tmp/app/ims/mc-image/509_focus.png";
				}
				else if(widthTargetIndex == 3) {
					image = "/tmp/app/ims/mc-image/664_focus.png";
				}
			}
			image;
		</script>
	</image>
	<text offsetXPC=5 offsetYPC=5 widthPC=90 heightPC=90 align=center fontSize=16 backgroundColor=-1:-1:-1 >
		<foregroundColor>
			<script>
				fgcolor = "255:255:255";
				queryIndex = getQueryItemIndex();
				focusIndex = getFocusItemIndex();
				data = getStringArrayAt(popupOptions, queryIndex);
				if (data == popupOptionFocus) {
					fgcolor = "247:104:8";
				}
				else if (queryIndex == focusIndex) {
					fgcolor = "0:112:166";
				}
				fgcolor;
			</script>
		</foregroundColor>
		<script>
			queryIndex = getQueryItemIndex();
			data = getStringArrayAt(popupOptions, queryIndex);
			data;
		</script>
	</text>
</itemDisplay>

<!-- Some variables defined here will be referred to define the other attributes in mediaDisplay. -->
<onEnter>
	setFullScreenFade(64);

	popupOptionSize = 0;
	while (1) {
		if (getStringArrayAt(popupOptions, popupOptionSize) == NULL_VARIANT) {
			break;
		}
		popupOptionSize += 1;
	}

	print("popupHeader = ", popupHeader);
	print("popupMessageSize = ", popupMessageSize);
	print("popupMessages = ", popupMessages);
	print("popupOptionSize = ", popupOptionSize);
	print("popupOptions = ", popupOptions);
	print("popupOptionFocus = ", popupOptionFocus);
	print("popupOptionFocusIndex = ", popupOptionFocusIndex);
	print("popupOptionWide = ", popupOptionWide);
	print("popupTimeout = ", popupTimeout);

	itemPerPage=6;
	viewAreaXPC=31.3;
	viewAreaYPC=21.3;
	viewAreaWidthPC=37.3;
	viewAreaHeightPC=57.5;

	itemXPC=8.4;
	itemYPC=13.8;
	itemWidthPC=83.3;
	itemHeightPC=12.1;
	itemImageXPC=8.4;
	itemImageYPC=13.8;
	itemImageWidthPC=83.3;
	itemImageHeightPC=12.1;

	imageFocus="";
	imageUnFocus="";

	osd_width = 1280;
	bg_width_0 = 483;
	bg_width_1 = 594;
	bg_width_2 = 749;
	bg_width_3 = 749;
	item_width_0 = 399;
	item_width_1 = 510;
	item_width_2 = 664;
	item_width_3 = 664;
	itemPC = 100 * item_width_0 / bg_width_0;
	border = 42;
	gap = 15;
	textPC = (item_width_0 - gap * 2) * 100 / bg_width_0;
	ratioFineTune = 1.2;

	textWidth = getTextWidth(popupHeader, 18);
	maxWidth = textWidth * itemPC / textPC;
	if (popupOptionSize &gt; 0) {
		checkIndex = 0;
		while(1){
			checkTitle = getStringArrayAt(popupOptions, checkIndex);
			titleWidth = getTextWidth(checkTitle, 16);
			if (titleWidth &gt; maxWidth) {
				maxWidth = titleWidth;
			}
			checkIndex += 1;
	  		if (checkIndex == popupOptionSize){
				break;
	  		}
		}
	}
	targetWidth = maxWidth * ratioFineTune;

	widthTargetIndex = 0;
	if (widthTargetIndex &lt; popupOptionWide) {
		widthTargetIndex = popupOptionWide;
	}

	while(1){
		if (widthTargetIndex == 0) {
			if (targetWidth &lt; item_width_0) {
				targetWidth = item_width_0;
				viewAreaWidthPC = 100 * bg_width_0 / osd_width;
				viewAreaXPC = (100 - viewAreaWidthPC) / 2;
				itemWidthPC = 100 * item_width_0 / bg_width_0 -0.6;
				itemXPC = (100 - itemWidthPC) / 2 + 0.2;
				break;
			}
		}
		else if (widthTargetIndex == 1) {
			if (targetWidth &lt; item_width_1) {
				targetWidth = item_width_1;
				viewAreaWidthPC = 100 * bg_width_1 / osd_width;
				viewAreaXPC = (100 - viewAreaWidthPC) / 2;
				itemWidthPC = 100 * item_width_1 / bg_width_1 - 0.6;
				itemXPC = (100 - itemWidthPC) / 2;
				break;
			}
		}
		else if (widthTargetIndex == 2) {
			if (targetWidth &lt; item_width_2) {
				targetWidth = item_width_2;
				viewAreaWidthPC = 100 * bg_width_2 / osd_width;
				viewAreaXPC = (100 - viewAreaWidthPC) / 2;
				itemWidthPC = 100 * item_width_2 / bg_width_2;
				itemXPC = (100 - itemWidthPC) / 2 + 0.2;
				break;
			}
		}
		else if (widthTargetIndex == 3) {
			if (1) {
				targetWidth = item_width_3;
				viewAreaWidthPC = 100 * bg_width_3 / osd_width;
				viewAreaXPC = (100 - viewAreaWidthPC) / 2;
				itemWidthPC = 100 * item_width_3 / bg_width_3;
				itemXPC = (100 - itemWidthPC) / 2 + 0.2;
				break;
			}
		}
		widthTargetIndex += 1;
	}

	osd_height = 720;
	bg_up = border;
	bg_top = 118 - border;
	bg_middle = 51;
	bg_gap = gap;
	bg_bottom = 76 - border;
	bg_down = border;

	hintGapPC = 0.9;
	hintIconWidthPC = 3;
	hintIconHeightPC = 3;
	hintHeight = 0.0;

	MaxLines = 10;

	if (popupOptionSize &lt; itemPerPage) {
		itemPerPage = popupOptionSize;
	}
	print("itemPerPage = ", itemPerPage);
	messageLinePerPage = MaxLines - itemPerPage;

	message_line = 0;
	message_line_displayed = 0;
	if (popupMessageSize &gt; 0) {
		checkIndex = 0;
		while(1){
			checkMsg = getStringArrayAt(popupMessages, checkIndex);
			msgLineNumber = getTextLineNumber(checkMsg, 14, viewAreaWidthPC * textPC / 100 / ratioFineTune, 0);
			message_line += msgLineNumber;

			checkIndex += 1;
	  		if (checkIndex == popupMessageSize){
				break;
	  		}
		}
	}
	print("message_line = ", message_line);

	if (message_line &gt; messageLinePerPage) {
		message_line_displayed = messageLinePerPage - 1;
		hintHeight = bg_middle;
	} else {
		message_line_displayed = message_line;
	}

	message_height = bg_middle * message_line_displayed;
	option_height = bg_middle * itemPerPage;

	total_height = bg_up + bg_top + bg_gap;
	if (message_height &gt; 0) {
		total_height += message_height + hintHeight + bg_gap;
	}
	if (option_height &gt; 0) {
		total_height +=  option_height;
	}
	total_height += bg_bottom + bg_down;

	viewAreaHeightPC = 100 * total_height / osd_height;
	if (viewAreaHeightPC &gt; 100) {
		viewAreaHeightPC = 100;
	}
	viewAreaYPC  = (100 - viewAreaHeightPC) / 2;
	itemYPos = bg_up + bg_top + bg_gap;
	if (message_height &gt; 0) {
		itemYPos += message_height + hintHeight + bg_gap;
	}

	if (total_height &gt; osd_height) {
		messagePC = 100 * message_height / osd_height;
		optionPC = 100 * option_height / osd_height;
		remainderPC = 100 - messagePC - optionPC;
		remainderHeight = total_height - message_height - option_height;
		itemHeightPC = 100 * bg_middle / osd_height;

		upPC         = remainderPC * bg_up  / remainderHeight;
		topPC        = remainderPC * bg_top / remainderHeight;
		gapPC        = remainderPC * bg_gap / remainderHeight;
		hintHeightPC = remainderPC * hintHeight / remainderHeight;
		itemYPC      = upPC + topPC + gapPC;
		if (messagePC &gt; 0)
		{
			itemYPC += messagePC + hintHeightPC + gapPC;
		}
		bottomPC = remainderPC * bg_bottom / remainderHeight;
		downPC   = remainderPC * bg_down   / remainderHeight;
	} else {
		itemYPC = 100 * itemYPos / total_height;
		itemHeightPC = 100 * bg_middle / total_height;

		upPC = 100 * bg_up / total_height;
		topPC = 100 * bg_top / total_height;
		gapPC = 100 * bg_gap / total_height;
		messagePC = 100 * message_height / total_height;
		hintHeightPC = 100 * hintHeight / total_height;
		optionPC = 100 * option_height / total_height;
		bottomPC = 100 * bg_bottom / total_height;
		downPC = 100 * bg_down / total_height;
	}

	offset1 = 0.0;
	offset2 = 0.0;
	if (itemPerPage == 1 || itemPerPage == 6) {
		offset2 += 0.1;
	}
	else if (itemPerPage == 2 || itemPerPage == 3 || itemPerPage == 4 || itemPerPage == 5) {
		offset2 = 0.2;
	}
	if (message_line_displayed == 2 || message_line_displayed == 4 || message_line_displayed == 8 || message_line_displayed == 10) {
		offset2 += 0.1;
	}
	else if (message_line_displayed == 1 || message_line_displayed == 3) {
		offset2 += 0.2;
	}
	print("offset1 = ", offset1);
	print("offset2 = ", offset2);
</onEnter>

<onUserInput>
	handle = "false";
	userInput = currentUserInput();
	focusIndex = getFocusItemIndex();
	if ("enter" == userInput) {
		data = getStringArrayAt(popupOptions, focusIndex);
		if (data != NULL) {
			print("item was pressed. set return string = ", data);
			setReturnString(data);
		}
		handle = "return";
	} else if ("right" == userInput) {
		ret = nextMultiPage();
		if (ret == "1") {
			redrawDisplay("item");
		}
		handle = "true";
	} else if ("left" == userInput) {
		ret = preMultiPage();
		if (ret == "1") {
			redrawDisplay("item");
		}
		handle = "true";
	}
	handle;
</onUserInput>

</mediaDisplay>


<channel>
	<title>
		<script>
			popupHeader;
		</script>
	</title>
	<link>rss_file://./scripts/iconbit-dynamicPopup.rss</link>


<!-- use itemSize element to describe how many items in the page -->
<itemSize>
	<script>
		popupOptionSize;
	</script>
</itemSize>


</channel>
</rss>
